params {
    mode = "nanopore"
    allele_number = 2
    config_profile_name        = 'full length reads from hs sample (np1 + np2)'
    
    ref = "assets/ref_hs_long_allele.fa"
    input  = "/home/kai.hu-umw/pi/michael.brodsky-umw/urlpipe_np3_hs_reverse_only/assets/test/samplesheet_nanopore_np3_hs_reverse_only.csv"
    outdir = "./results_nanopore_np3_hs_flanking_25_strict_reverse_only"

    umi_cutoffs = '1,5,15,30' // 0 (no correction) will be added by default
    umi_correction_method = "least_distance" // choose from "least_distance", "mode", "mean"

    // Fasta references
    fasta = 'https://raw.githubusercontent.com/nf-core/test-datasets/viralrecon/genome/NC_045512.2/GCF_009858895.2_ASM985889v3_genomic.200409.fna.gz'
}


process {

    // hs and mm are the same regarding repeat flanking sequences even when using shorter version of mm ref
    withName: CLASSIFY_INDEL_NANOPORE {        
        ext.repeat_flanking_left  = "TCGAGTCCCTCAAGTCCTTC"
        ext.repeat_flanking_right = "CCGCCACCGCCGCCGCCGCC"
        ext.allowed_mismatch = 5
    }

    withName: GET_HIGH_QUALITY_FLANKING_READS {
        ext.mean_quality_cutoff = 25
        mode = "strict"
    }

    //withName: CLASSIFY_READTHROUGH_NANOPORE {
      //  ext.args = 'TCGAGTCCCTCAAGTCCTTC CCGCCACCGCCGCCGCCGCC 2' // first 20nt flanking repeat region from R1, R2, and allowed mismatch (including INDELs)
        //// R2 flanking nt: same direction as R1
    //}

    withName: REPEAT_LENGTH_DISTRIBUTION_NANOPORE {
       ext.args = 'TCGAGTCCCTCAAGTCCTTC CCGCCACCGCCGCCGCCGCC 2'
       // first 20nt flanking repeat region from R1, R2, and allowed mismatch (including INDELs)
       // R2 flanking nt: same direction as R1
    }



}