process {

  withName: CUTADAPT {
    ext.args = '-a AGATCGGAAGAGCACACGTCT -A TCGGAAGAGCGTCGTGTAG'
  }

  withName: CLASSIFY_LOCUS {
      ext.args = 'TCTCTCCGGGGACTGCCGTG CGGCTGAGGCAGCAGCGGCT 2' // first 20nt from R1, R2, and allowed mismatch (including INDELs)
  }

  withName: CLASSIFY_INDEL {
      ext.args = 'TCGAGTCCCTCAAGTCCTTC GGCGGCGGTGGCGGCTGTTG 2' // first 20nt flanking repeat region from R1, R2, and allowed mismatch (substitution only)
      // R2 flanking nt reverse complemented
  }

  withName: CLASSIFY_READTHROUGH {
      ext.args = 'TCGAGTCCCTCAAGTCCTTC GGCGGCGGTGGCGGCTGTTG 2' // first 20nt flanking repeat region from R1, R2, and allowed mismatch (including INDELs)
      // R2 flanking nt reverse complemented
  }

  withName: REPEAT_DIST_DISTANCE {
      ext.args = 'TCGAGTCCCTCAAGTCCTTC GGCGGCGGTGGCGGCTGTTG 2 300'
      // first 20nt flanking repeat region from R1, R2, and allowed mismatch (including INDELs)
      // R2 flanking nt reverse complemented
      // Choose an integer specifying the X-axis scale.
      ext.args_frac = '151 166' // to caculate fraction of reads < 151 and > 166
  }

  withName: REPEAT_DIST_DISTANCE_MERGED {
      ext.args = 'TCGAGTCCCTCAAGTCCTTC GGCGGCGGTGGCGGCTGTTG 2 300'
      // first 20nt flanking repeat region from R1, R2, and allowed mismatch (including INDELs)
      // R2 flanking nt reverse complemented
      // Choose an integer specifying the X-axis scale.
      ext.args_frac = '151 166' // to caculate fraction of reads < 151 and > 166
  }
}
