process {
  publishDir = [
      path: { "${params.outdir}/" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
  ]


  withName: MAP_LOCUS {
      publishDir = [
          path: { "${params.outdir}/" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
      ext.args = 'TCTCTCCGGGGACTGCCGTG CGGCTGAGGCAGCAGCGGCT 2' // first 20nt from R1, R2, and allowed mismatch (including INDELs)
  }

  withName: CLASSIFY_INDEL {
      publishDir = [
          path: { "${params.outdir}/" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
      ext.args = 'TCGAGTCCCTCAAGTCCTTC GGCGGCGGTGGCGGCTGTTG 2' // first 20nt flanking repeat region from R1, R2, and allowed mismatch (substitution only)
      // R2 flanking nt reverse complemented
  }


  withName: CLASSIFY_READTHROUGH {
      publishDir = [
          path: { "${params.outdir}/" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
      ext.args = 'TCGAGTCCCTCAAGTCCTTC GGCGGCGGTGGCGGCTGTTG 2' // first 20nt flanking repeat region from R1, R2, and allowed mismatch (including INDELs)
      // R2 flanking nt reverse complemented
  }

  withName: REPEAT_DIST_DISTANCE {
      publishDir = [
          path: { "${params.outdir}/" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
      ext.args = 'TCGAGTCCCTCAAGTCCTTC GGCGGCGGTGGCGGCTGTTG 2 300'
      // first 20nt flanking repeat region from R1, R2, and allowed mismatch (including INDELs)
      // R2 flanking nt reverse complemented
      // Choose an integer specifying the X-axis scale.
      ext.args_frac = '151 166' // to caculate fraction of reads < 151 and > 166
  }

  withName: REPEAT_DIST_DISTANCE_MERGED {
      publishDir = [
          path: { "${params.outdir}/" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
      ext.args = 'TCGAGTCCCTCAAGTCCTTC GGCGGCGGTGGCGGCTGTTG 2 300'
      // first 20nt flanking repeat region from R1, R2, and allowed mismatch (including INDELs)
      // R2 flanking nt reverse complemented
      // Choose an integer specifying the X-axis scale.
      ext.args_frac = '151 166' // to caculate fraction of reads < 151 and > 166
  }

}
