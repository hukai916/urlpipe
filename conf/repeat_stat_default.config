process {
    withName: PREP_REF {
        publishDir = [
            path: { "${params.outdir}/4_repeat_statistics/4a_repeat_length_distribution_prep_ref" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.reference = 'assets/IlluminaMmQ50Trim_Ref.fa'
        ext.repeat_start = 73 // start position of repeat in ref, 1-based coordinate
        ext.repeat_end = 234 // end position of repeat in ref, 1-based coordinate
        ext.repeat_unit = "CAG"
        ext.repeat_range = "0:150" // range of number of repeat units (e.g. "CAG") when it comes to prep_ref
    }

    withName: BWA {
        publishDir = [
            path: { "${params.outdir}/4_repeat_statistics/4a_repeat_length_distribution_bwa" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.reference = 'assets/IlluminaMmQ50Trim_Ref.fa'
        ext.args = "" // bwa options
    }

    withName: BWA_LENGTH {
        publishDir = [
            path: { "${params.outdir}/4_repeat_statistics/4a_repeat_length_distribution_bwa_length" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: REPEAT_LENGTH_DISTRIBUTION_DEFAULT {
        ext.args = 'TCGAGTCCCTCAAGTCCTTC CCGCCACCGCCGCCGCCGCC 2'
        publishDir = [
            path: { "${params.outdir}/4_repeat_statistics/tmp" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        // first 20nt flanking repeat region from R1, R2, and allowed mismatch (including INDELs)
        // R2 flanking nt reverse complemented
    }

    withName: STAT_REPEAT_LENGTH_DISTRIBUTION_DEFAULT {
        publishDir = [
            path: { "${params.outdir}/4_repeat_statistics/4a_repeat_length_distribution" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = 'repeat_length_count_default_umi_0.csv repeat_length_count_default_umi_0.html "repeat_length_count_" ".csv"'
    }

    withName: REPEAT_LENGTH_DISTRIBUTION_PER_UMI {
        publishDir = [
            path: { "${params.outdir}/4_repeat_statistics/4b_repeat_length_distribution_per_umi/csv" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = 10 // first args: max umi groups to output
    }

    withName: PLOT_REPEAT_LENGTH_DISTRIBUTION_PER_UMI {
        publishDir = [
            path: { "${params.outdir}/4_repeat_statistics/4b_repeat_length_distribution_per_umi/html" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // withName: REPEAT_LENGTH_DISTRIBUTION_DEFAULT_UMI_CORRECT {
    // }

    withName: STAT_REPEAT_LENGTH_DISTRIBUTION_DEFAULT_UMI_CORRECT {
        publishDir = [
            path: { "${params.outdir}/4_repeat_statistics/4a_repeat_length_distribution" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: REPEAT_LENGTH_FRACTION {
        publishDir = [
            path: { "${params.outdir}/4_repeat_statistics/4c_repeat_length_fraction" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
