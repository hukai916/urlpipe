includeConfig 'adaptor_count_wf.config'

// adaptor1: GTAAAACGACGGCCAGT
// adaptor2: CTACACGACGCTCTTCCGATCT

// adaptor3_1: AGCGGCGGGCTTATACCCCTACAG
// adaptor3_2: TCGTGCCGACCACGCGCATT
// adaptor4_1: GCCCTGTGCTCTCTTGCAGCT
// adaptor4_2: ACCAGTATTCCAGTCAGGCTTGCCA
// adaptor5: AGATCGGAAGAGCACACGTCT

process {
    withName: GET_VALID_NANOPORE_READS {
        publishDir = [
            path: { "${params.outdir}/1_preprocess_nanopore/1b_valid_nanopore_reads" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = 'GTAAAACGACGGCCAGT,CTACACGACGCTCTTCCGATCT'
    }

    withName: CUTADAPT_NANOPORE_AP01 {
        publishDir = [
            path: { "${params.outdir}/1_preprocess_nanopore/1c_cutadapt_ap01" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-n 99 -g GTAAAACGACGGCCAGT -m 50 -M 10000'
    }

    withName: CUTADAPT_NANOPORE_AP01_RC {
        publishDir = [
            path: { "${params.outdir}/1_preprocess_nanopore/1c_cutadapt_ap01_rc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-n 99 -a ACTGGCCGTCGTTTTAC -m 50 -M 10000'
    }

    withName: DEMULTIPLEX {
        publishDir = [
            path: { "${params.outdir}/1_preprocess_nanopore/1d_demultiplex/reads" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = "${projectDir}/assets/sample_barcode.txt"
    }

    withName: CUTADAPT_FASTQS_AP02 {
        publishDir = [
            path: { "${params.outdir}/1_preprocess_nanopore/1e_cutadapt_ap02" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-n 99 -g CTACACGACGCTCTTCCGATCT -m 50 -M 10000'
    }

    withName: UMI_EXTRACT_FASTQS {
        publishDir = [
            path: { "${params.outdir}/1_preprocess_nanopore/1f_umi_extract" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '--bc-pattern=NNNNNNNNNNNNNNNNNNNNNNNN'
        ext.umi_base_to_keep = 12 // keep the first 12 UMI bases
    }

    withName: CUTADAPT_FASTQS_AP03 {
        publishDir = [
            path: { "${params.outdir}/1_preprocess_nanopore/1g_cutadapt_ap03" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-n 99 -g AGCGGCGGGCTTATACCCCTACAG -g TCGTGCCGACCACGCGCATT -m 50 -M 10000'
    }

    withName: CUTADAPT_FASTQS_AP04 {
        publishDir = [
            path: { "${params.outdir}/1_preprocess_nanopore/1g_cutadapt_ap04" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-n 99 -a GCCCTGTGCTCTCTTGCAGCT -a ACCAGTATTCCAGTCAGGCTTGCCA -a GAAACTGGGGCGGTGGCGCA -m 50 -M 10000'
        // of note, the last GAAACTGGGGCGGTGGCGCA is for "Mouse Q50 short"
    }

     withName: GET_FULL_LENGTH_READS {
        publishDir = [
            path: { "${params.outdir}/1_preprocess_nanopore/1h_full_length_read" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.ref_start_range = '200:250' // 0-based coordinates
        ext.ref_end_range = '-100:-50' // 0-basd coordinates 
        
        ext.read_start_range = '0:300' // 0-based coordinates 
        ext.read_end_range = '-150:' // 0-based coordinates

        ext.allowed_error = 3 // number of allowed errors when searching ref_start/end against read

        // note from Mike:
            // +200 to +250 from the start (SNP is located at 189) is in the first 250 of the read. And that the 3p 50bp sequence (-100 to -50 from the end) is in the last 150 bp of the read.
    }
   
    withName: STAT_FULL_LENGTH {
        publishDir = [
            path: { "${params.outdir}/1_preprocess_nanopore/1h_full_length_read" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = ''
        ext.outfile = 'full_length_reads.csv'
        ext.header = 'sample_name,full_length_reads,partial_length_reads,full_length_reads_percent,partial_length_reads_percent'
    }


    withName: CUTADAPT_NANOPORE_3END {
        publishDir = [
            path: { "${params.outdir}/1_preprocess_nanopore/1a_cutadapt_3end" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        // ext.args = '-g GTAGGCTCCAAGTCTTCAGGGTCTGT -G CGGCTGAGGCAGCAGCGGCTGT'
        ext.args = '-n 99 -g AGACGTGTGCTCTTCCGATCT -a AGATCGGAAGAGCACACGTCT -m 50 -M 10000'
    }






    withName: UMI_EXTRACT {
        publishDir = [
            path: { "${params.outdir}/1_preprocess/1b_umi_extract" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '--bc-pattern=NNNNNNNNNN'
    }


    withName: FASTQC_CUTADAPT {
        publishDir = [
            path: { "${params.outdir}/2_qc_and_umi/2a_fastqc/fastq_cutadapt" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '--quiet'
    }

    withName: READ_PER_UMI {
        publishDir = [
            path: { "${params.outdir}/2_qc_and_umi/read_per_umi_cutadapt" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '500' // X-axis range: choose from 'auto' or a positive number; if 'auto', the X-axis scale of the plot will be automatically determined.
    }
}
